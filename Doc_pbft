Overview of PBFT Protocol:

The Practical Byzantine Fault Tolerance (PBFT) protocol is a consensus algorithm used in distributed systems to achieve agreement among nodes, 
even if some of them are faulty or malicious. PBFT is particularly suited for systems where high reliability and consistency are required.


Example Scenario

Consider a distributed banking system with four nodes (A, B, C, D), where one of them (A) is the primary, 
and the others are replicas. The system can tolerate one faulty node.

Phase 1: Pre-Prepare

Client Request: A client sends a transaction request (e.g., transferring money) to the primary node A.
Pre-Prepare Message: The primary node A assigns a sequence number to the request and broadcasts a Pre-Prepare message containing the transaction and the sequence number to all replicas (B, C, D).

Phase 2: Prepare

Prepare Message: When replicas B, C, and D receive the Pre-Prepare message, they verify the transaction and broadcast a Prepare message to all other nodes (including the primary).
Verification: Each node waits until it receives Prepare messages from at least ( 2f + 1
) nodes, including itself.

Phase 3: Commit

Commit Message: After receiving the required number of Prepare messages, each node broadcasts a Commit message to all other nodes.
Commitment: Each node waits until it receives Commit messages from at least 2f+1 node.

Execution: Once the node receives the necessary Commit messages, it executes the transaction and updates its local state. 
The node then sends a reply to the client, confirming the completion of the transaction.


Code Explaination:

PBFTNode Struct:

Represents a node in the PBFT network.
ID: Each node has a unique identifier within the network.
TotalNodes: Indicates the total number of nodes in the PBFT network.
PrepareMsgs: A data structure to store Prepare messages indexed by sequence number. Prepare messages are sent by nodes to signal agreement on a PrePrepare message.
CommitMsgs: A data structure to store Commit messages indexed by sequence number. Commit messages are sent by nodes to signal agreement on Prepare messages.
mu: A mutex used for synchronizing access to shared data structures, ensuring thread safety in concurrent operations.

Messages:

PrePrepareMessage:

Block: Represents a block in the blockchain, typically containing transaction data.
View: Indicates the current view of the PBFT system. Views are used to manage the consensus process and handle view changes.
Seq: Sequence number of the message, used to order messages within a view.

PrepareMessage:

NodeID: ID of the node sending the message.
View: Current view of the PBFT system.
Seq: Sequence number of the message.
Digest: Digest of the block. Digests are cryptographic hashes computed from block data, used to uniquely identify blocks.

CommitMessage:

NodeID: ID of the node sending the message.
View: Current view of the PBFT system.
Seq: Sequence number of the message.
Digest: Digest of the block.

Explanation of the Code:

The code provides an implementation of a PBFT node and message types used in the PBFT consensus algorithm.
Each PBFT node maintains state information such as its ID, the total number of nodes in the network, and message storage for Prepare and Commit messages.
PrePrepare, Prepare, and Commit messages are defined to facilitate the consensus process in the PBFT algorithm.
The PBFTNode struct methods handle message reception and processing, including broadcasting Prepare and Commit messages and handling their reception.
This implementation serves as a foundation for a distributed consensus algorithm where nodes work together to achieve agreement on the order of transactions in a blockchain.
